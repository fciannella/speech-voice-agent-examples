# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.

{
  "openapi": "3.0.1",
  "info": {
    "title": "Animation Graph Microservice",
    "description": "The animation graph microservice composes the face and body animation with an animation graph and sends the resulting pose to the Omniverse renderer microservice.",
    "version": "0.1"
  },
  "paths": {
    "/status": {
      "get": {
        "summary": "Returns the current status of the service",
        "description": "Returns the current status of the service.",
        "operationId": "_status_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health probe",
        "description": "Returns the current status of the service.",
        "operationId": "_status_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "summary": "Readiness probe",
        "description": "Returns the current status of the service.",
        "operationId": "_status_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/startup": {
      "get": {
        "summary": "Startup probe",
        "description": "Returns the current status of the service.",
        "operationId": "_status_startup_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/asyncapi/docs": {
      "get": {
        "summary": " Async App Docs Endpoint",
        "operationId": "_async_app_docs_endpoint_asyncapi_docs_get",
        "parameters": [
          {
            "name": "app_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/asyncapi/schema": {
      "get": {
        "summary": " Async App Schema Endpoint",
        "operationId": "_async_app_schema_endpoint_asyncapi_schema_get",
        "parameters": [
          {
            "name": "app_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/{stream_id}/animation_graphs/avatar/variables/facial_gesture_state/{value}": {
      "put": {
        "summary": "Update Variable By Stream Id And Value Callable",
        "operationId": "update_variable_by_stream_id_and_value_callable_streams__stream_id__animation_graphs_avatar_variables_facial_gesture_state__value__put",
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stream Id"
            }
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Value"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Update Variable By Stream Id And Value Callable Streams  Stream Id  Animation Graphs Avatar Variables Facial Gesture State  Value  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/{stream_id}/animation_graphs/avatar/variables/gesture_state/{value}": {
      "put": {
        "summary": "Update Variable By Stream Id And Value Callable",
        "operationId": "update_variable_by_stream_id_and_value_callable_streams__stream_id__animation_graphs_avatar_variables_gesture_state__value__put",
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stream Id"
            }
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Value"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Update Variable By Stream Id And Value Callable Streams  Stream Id  Animation Graphs Avatar Variables Gesture State  Value  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/{stream_id}/animation_graphs/avatar/variables/position_state/{value}": {
      "put": {
        "summary": "Update Variable By Stream Id And Value Callable",
        "operationId": "update_variable_by_stream_id_and_value_callable_streams__stream_id__animation_graphs_avatar_variables_position_state__value__put",
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stream Id"
            }
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Value"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Update Variable By Stream Id And Value Callable Streams  Stream Id  Animation Graphs Avatar Variables Position State  Value  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/{stream_id}/animation_graphs/avatar/variables/posture_state/{value}": {
      "put": {
        "summary": "Update Variable By Stream Id And Value Callable",
        "operationId": "update_variable_by_stream_id_and_value_callable_streams__stream_id__animation_graphs_avatar_variables_posture_state__value__put",
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stream Id"
            }
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Value"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Update Variable By Stream Id And Value Callable Streams  Stream Id  Animation Graphs Avatar Variables Posture State  Value  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/{stream_id}/requests/{request_id}": {
      "delete": {
        "summary": "Stop Request Playback",
        "operationId": "stop_request_playback_streams__stream_id__requests__request_id__delete",
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stream Id"
            }
          },
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Request Id"
            }
          },
          {
            "name": "fade_out",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0.0,
              "default": 0.0,
              "title": "Fade Out"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/animation_graphs": {
      "get": {
        "summary": "Get Animation Graphs",
        "operationId": "get_animation_graphs_animation_graphs_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {},
                  "type": "array",
                  "title": "Response Get Animation Graphs Animation Graphs Get"
                }
              }
            }
          }
        }
      }
    },
    "/animation_graphs/avatar/variables": {
      "get": {
        "summary": "Get Animation Graph Variables",
        "operationId": "get_animation_graph_variables_animation_graphs_avatar_variables_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {},
                  "type": "array",
                  "title": "Response Get Animation Graph Variables Animation Graphs Avatar Variables Get"
                }
              }
            }
          }
        }
      }
    },
    "/streams": {
      "get": {
        "summary": "Get Streams",
        "operationId": "get_streams_streams_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {},
                  "type": "array",
                  "uniqueItems": true,
                  "title": "Response Get Streams Streams Get"
                }
              }
            }
          }
        }
      }
    },
    "/sdr/add_stream": {
      "post": {
        "summary": "Post Sdr Add Stream",
        "operationId": "post_sdr_add_stream_sdr_add_stream_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostSdrStreamsBodyModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Post Sdr Add Stream Sdr Add Stream Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sdr/remove_stream": {
      "post": {
        "summary": "Post Sdr Remove Stream",
        "operationId": "post_sdr_remove_stream_sdr_remove_stream_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSdrStreamsBodyModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Post Sdr Remove Stream Sdr Remove Stream Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/streams/{stream_id}": {
      "post": {
        "summary": "Post Streams Stream Id",
        "operationId": "post_streams_stream_id_streams__stream_id__post",
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stream Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Post Streams Stream Id Streams  Stream Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Streams Stream Id",
        "operationId": "delete_streams_stream_id_streams__stream_id__delete",
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stream Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Delete Streams Stream Id Streams  Stream Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/readiness": {
      "get": {
        "summary": "Readiness",
        "operationId": "readiness_readiness_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Readiness Readiness Get"
                }
              }
            }
          }
        }
      }
    },
    "/liveness": {
      "get": {
        "summary": "Liveness",
        "operationId": "liveness_liveness_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Liveness Liveness Get"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DeleteSdrStreamsBodyModel": {
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventModel"
          }
        },
        "type": "object",
        "required": [
          "event"
        ],
        "title": "DeleteSdrStreamsBodyModel"
      },
      "EventModel": {
        "properties": {
          "camera_id": {
            "type": "string",
            "title": "Camera Id"
          }
        },
        "type": "object",
        "required": [
          "camera_id"
        ],
        "title": "EventModel"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PostSdrStreamsBodyModel": {
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventModel"
          }
        },
        "type": "object",
        "required": [
          "event"
        ],
        "title": "PostSdrStreamsBodyModel"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}